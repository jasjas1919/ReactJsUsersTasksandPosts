{"ast":null,"code":"import _classCallCheck from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\myapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Users from \"./Users/Users\";\nimport MainTasks from \"./MainTasks/mainTasks\";\nimport { Switch, Route, Link, withRouter } from 'react-router-dom';\nimport DAL from \"./DALUtils\";\nimport { connect } from \"react-redux\";\nimport Add from \"./Add/Add\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.filterUsers = function (poetFilter) {\n      var filterUsers = _this.state.users;\n      filterUsers = filterUsers.filter(function (poet) {\n        var usersName = user.firstName.toLowerCase() + user.lastName.toLowerCase();\n        return usersName.indexOf(userFilter.toLowerCase()) !== -1;\n      });\n\n      _this.setState({\n        filterUsers: filterUsers\n      });\n    };\n\n    _this.state = {\n      users: [],\n      todos: [],\n      activeUser: \"\",\n      usersDone: false,\n      todosDone: false,\n      clickedUserId: \"\",\n      filteredUsers: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.usersDone && this.state.todosDone ? React.createElement(\"div\", {\n        className: \"usersWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/addUser',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(Users, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })) : \"loading\", React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/tasks/:ID\",\n        component: MainTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tasks/:ID/addTodo\",\n        component: MainTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"`/tasks/:ID/addPost\",\n        component: MainTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/addUser\",\n        component: Add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        users: users,\n        filterUsers: users\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      DAL.getData('https://jsonplaceholder.typicode.com/todos').then(function (res) {\n        return _this2.props.dispatch({\n          type: 'GET-ALL-TODOS',\n          todos: res.data,\n          todosDone: res.data,\n          clickedUserId: _this2.state.clickedUserId\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      DAL.getData('https://jsonplaceholder.typicode.com/users').then(function (res) {\n        return _this2.props.dispatch({\n          type: 'GET-ALL-USERS',\n          users: res.data\n        });\n      }).catch(function (err) {\n        return console.log(\"errr\", err);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, nextState) {\n      if (nextProps != nextState) {\n        return {\n          usersDone: nextProps.data.usersDone,\n          todosDone: nextProps.data.todosDone,\n          clickedUserId: nextProps.data.clickedUserId\n        };\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"mapStateToProps app state\", state);\n  return {\n    data: state\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(App));","map":{"version":3,"sources":["C:\\myapp\\src\\App.js"],"names":["React","Component","Users","MainTasks","Switch","Route","Link","withRouter","DAL","connect","Add","App","props","filterUsers","poetFilter","state","users","filter","poet","usersName","user","firstName","toLowerCase","lastName","indexOf","userFilter","setState","todos","activeUser","usersDone","todosDone","clickedUserId","filteredUsers","getData","then","res","dispatch","type","data","catch","err","console","log","nextProps","nextState","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAqBC,IAArB,EAA0BC,UAA1B,QAA2C,kBAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;IAGMC,G;;;;;AAEF,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;;AADc,UAiDlBC,WAjDkB,GAiDJ,UAACC,UAAD,EAAgB;AAC1B,UAAID,WAAW,GAAG,MAAKE,KAAL,CAAWC,KAA7B;AACAH,MAAAA,WAAW,GAAGA,WAAW,CAACI,MAAZ,CAAmB,UAACC,IAAD,EAAU;AACvC,YAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeC,WAAf,KAA+BF,IAAI,CAACG,QAAL,CAAcD,WAAd,EAA/C;AACA,eAAOH,SAAS,CAACK,OAAV,CACHC,UAAU,CAACH,WAAX,EADG,MAC2B,CAAC,CADnC;AAEH,OAJa,CAAd;;AAKA,YAAKI,QAAL,CAAc;AACVb,QAAAA,WAAW,EAAXA;AADU,OAAd;AAGH,KA3DiB;;AAEd,UAAKE,KAAL,GAAW;AAACC,MAAAA,KAAK,EAAC,EAAP;AAAUW,MAAAA,KAAK,EAAC,EAAhB;AAAmBC,MAAAA,UAAU,EAAC,EAA9B;AAAiCC,MAAAA,SAAS,EAAC,KAA3C;AAAiDC,MAAAA,SAAS,EAAC,KAA3D;AAAiEC,MAAAA,aAAa,EAAC,EAA/E;AAAmFC,MAAAA,aAAa,EAAC;AAAjG,KAAX;AAFc;AAGjB;;;;6BASQ;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKjB,KAAL,CAAWc,SAAX,IAAwB,KAAKd,KAAL,CAAWe,SAAnC,GACG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,CADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADH,GAKK,SAPV,EASI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAE3B,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,oBAAZ;AAAkC,QAAA,SAAS,EAAEA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,qBAAZ;AAAkC,QAAA,SAAS,EAAEA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAEO,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CATJ,CADJ;AAkBH;;;yCAEoB;AACjB,WAAKgB,QAAL,CAAc;AAACV,QAAAA,KAAK,EAALA,KAAD;AAAQH,QAAAA,WAAW,EAAEG;AAArB,OAAd;AACH;;;wCAEkB;AAAA;;AACfR,MAAAA,GAAG,CAACyB,OAAJ,CAAY,4CAAZ,EACAC,IADA,CACK,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACvB,KAAL,CAAWwB,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAC,eAAN;AAAwBV,UAAAA,KAAK,EAACQ,GAAG,CAACG,IAAlC;AAAwCR,UAAAA,SAAS,EAACK,GAAG,CAACG,IAAtD;AAA6DP,UAAAA,aAAa,EAAC,MAAI,CAAChB,KAAL,CAAWgB;AAAtF,SAApB,CAAJ;AAAA,OADR,EAEAQ,KAFA,CAEM,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFT;AAIAhC,MAAAA,GAAG,CAACyB,OAAJ,CAAY,4CAAZ,EACAC,IADA,CACK,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACvB,KAAL,CAAWwB,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAC,eAAN;AAAwBrB,UAAAA,KAAK,EAACmB,GAAG,CAACG;AAAlC,SAApB,CAAJ;AAAA,OADR,EAEAC,KAFA,CAEM,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,GAAnB,CAAJ;AAAA,OAFT;AAIH;;;6CA1C+BG,S,EAAUC,S,EAAU;AAChD,UAAGD,SAAS,IAAEC,SAAd,EAAwB;AACpB,eAAM;AAACf,UAAAA,SAAS,EAACc,SAAS,CAACL,IAAV,CAAeT,SAA1B;AAAsCC,UAAAA,SAAS,EAACa,SAAS,CAACL,IAAV,CAAeR,SAA/D;AAAyEC,UAAAA,aAAa,EAACY,SAAS,CAACL,IAAV,CAAeP;AAAtG,SAAN;AACH;AAEJ;;;;EAZa9B,S;;AAoElB,IAAM4C,eAAe,GAAG,SAAlBA,eAAkB,CAAC9B,KAAD,EAAU;AAC9B0B,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwC3B,KAAxC;AACA,SAAO;AACHuB,IAAAA,IAAI,EAAEvB;AADH,GAAP;AAGH,CALD;;AAQA,eAAeR,UAAU,CAACE,OAAO,CAACoC,eAAD,CAAP,CAAyBlC,GAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Users from \"./Users/Users\";\nimport MainTasks from \"./MainTasks/mainTasks\";\nimport {Switch,Route,Link,withRouter} from 'react-router-dom';\nimport DAL from \"./DALUtils\";\nimport {connect} from \"react-redux\";\nimport Add from \"./Add/Add\";\n\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={users:[],todos:[],activeUser:\"\",usersDone:false,todosDone:false,clickedUserId:\"\", filteredUsers:[]};\n    }\n\n    static getDerivedStateFromProps(nextProps,nextState){\n        if(nextProps!=nextState){\n            return{usersDone:nextProps.data.usersDone , todosDone:nextProps.data.todosDone,clickedUserId:nextProps.data.clickedUserId}\n        }\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"App\">\n\n                {this.state.usersDone && this.state.todosDone ?\n                    <div className='usersWrap'>\n                        <Link to={'/addUser'}><input type=\"button\" value=\"Add\"/></Link>\n                        <Users/>\n                    </div>\n                    : \"loading\"\n                }\n                <Switch>\n                    <Route path='/tasks/:ID' component={MainTasks}/>\n                    <Route path='/tasks/:ID/addTodo'  component={MainTasks}/>\n                    <Route path='`/tasks/:ID/addPost' component={MainTasks}/>\n                    <Route path='/addUser' component={Add}/>\n                </Switch>\n            </div>\n        );\n    }\n\n    componentWillMount() {\n        this.setState({users, filterUsers: users})\n    }\n\n    componentDidMount(){\n        DAL.getData('https://jsonplaceholder.typicode.com/todos').\n        then(res => this.props.dispatch({type:'GET-ALL-TODOS' , todos:res.data ,todosDone:res.data , clickedUserId:this.state.clickedUserId,})).\n        catch(err => console.log(err));\n\n        DAL.getData('https://jsonplaceholder.typicode.com/users').\n        then(res => this.props.dispatch({type:'GET-ALL-USERS' , users:res.data })).\n        catch(err => console.log(\"errr\",err));\n\n    }\n\n    filterUsers = (poetFilter) => {\n        let filterUsers = this.state.users;\n        filterUsers = filterUsers.filter((poet) => {\n            let usersName = user.firstName.toLowerCase() + user.lastName.toLowerCase();\n            return usersName.indexOf(\n                userFilter.toLowerCase()) !== -1\n        });\n        this.setState({\n            filterUsers\n        })\n    }\n\n\n}\n\n\n\nconst mapStateToProps = (state)=> {\n    console.log(\"mapStateToProps app state\",state);\n    return {\n        data: state\n    }\n};\n\n\nexport default withRouter(connect(mapStateToProps)(App));\n"]},"metadata":{},"sourceType":"module"}