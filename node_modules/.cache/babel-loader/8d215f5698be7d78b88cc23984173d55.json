{"ast":null,"code":"import _classCallCheck from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\myapp\\\\src\\\\Users\\\\Users.js\";\nimport React, { Component } from 'react';\nimport './users.css';\nimport User from \"./User\";\nimport DAL from \"../DALUtils\";\nimport { connect } from 'react-redux';\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n\n    _this.updateUser = function (newId, newName, newEmail, newStreet, newCity, newZipcode) {\n      var newUsers = _this.state.users;\n      var thisUserId = newId;\n      var NewUserName = newName;\n      var NewUserEmail = newEmail;\n      var NewUserStreet = newStreet;\n      var NewUserCity = newCity;\n      var NewUserZipcode = newZipcode;\n\n      for (var i in newUsers) {\n        if (newUsers[i].id == thisUserId) {\n          newUsers[i].name = NewUserName;\n          newUsers[i].email = NewUserEmail;\n          newUsers[i].address.street = NewUserStreet;\n          newUsers[i].address.city = NewUserCity;\n          newUsers[i].address.zipcode = NewUserZipcode;\n          break; //Stop this loop, we found it!\n        }\n      }\n\n      console.log('new users arr:', newUsers);\n\n      _this.setState({\n        usersMap: newUsers\n      });\n\n      console.log(\"state users:\", _this.state.usersMap);\n    };\n\n    _this.deleteUser = function (userId) {\n      var userId = userId;\n      var usersArr = _this.state.users;\n      var found = usersArr.find(function (x) {\n        return x.id === userId;\n      });\n      var index2 = usersArr.indexOf(found);\n      usersArr.splice(index2, 1);\n\n      _this.setState({\n        users: usersArr\n      });\n    };\n\n    _this.state = {\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      DAL.getUsers('https://jsonplaceholder.typicode.com/users').then(function (res) {\n        return _this2.props.dispatch({\n          type: 'GET-ALL-USERS',\n          users: res.data\n        }).then(console.log(\"res\", res), console.log(\"res data\", res.data));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.users, \"rrrrrrrrrrr\");\n      var usersMap = this.state.users.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"usrsMapping\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(User, {\n          userId: item.id,\n          name: item.name,\n          email: item.email,\n          street: item.address.street,\n          city: item.address.city,\n          zipcode: item.address.zipcode,\n          onUpdate: _this3.updateUser,\n          onDelete: _this3.deleteUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        id: \"Users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, usersMap);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, nextState) {\n      console.log(\"UsersgetDerivedStateFromProps\");\n      return {\n        users: nextProps.data.users\n      };\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state\n  };\n};\n\nexport default connect(mapStateToProps)(Users);","map":{"version":3,"sources":["C:\\myapp\\src\\Users\\Users.js"],"names":["React","Component","User","DAL","connect","Users","props","updateUser","newId","newName","newEmail","newStreet","newCity","newZipcode","newUsers","state","users","thisUserId","NewUserName","NewUserEmail","NewUserStreet","NewUserCity","NewUserZipcode","i","id","name","email","address","street","city","zipcode","console","log","setState","usersMap","deleteUser","userId","usersArr","found","find","x","index2","indexOf","splice","getUsers","then","res","dispatch","type","data","catch","err","map","item","index","nextProps","nextState","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './users.css';\r\nimport User from \"./User\";\r\nimport DAL from \"../DALUtils\";\r\nimport {connect} from 'react-redux';\r\n\r\nclass Users extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={users:[]};\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        DAL.getUsers('https://jsonplaceholder.typicode.com/users').\r\n        then(res => this.props.dispatch({type:'GET-ALL-USERS' , users:res.data}).then(console.log(\"res\",res),console.log(\"res data\",res.data))).\r\n        catch(err => console.log(err));\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps,nextState){\r\n        console.log(\"UsersgetDerivedStateFromProps\");\r\n        return{users:nextProps.data.users}\r\n    }\r\n\r\n\r\n    updateUser =(newId,newName,newEmail,newStreet,newCity,newZipcode)=>{\r\n        var newUsers = this.state.users;\r\n        var thisUserId = newId;\r\n        var NewUserName = newName;\r\n        var NewUserEmail = newEmail;\r\n        var NewUserStreet = newStreet;\r\n        var NewUserCity = newCity;\r\n        var NewUserZipcode = newZipcode;\r\n\r\n        for (var i in newUsers) {\r\n            if (newUsers[i].id == thisUserId) {\r\n                newUsers[i].name = NewUserName;\r\n                newUsers[i].email = NewUserEmail;\r\n                newUsers[i].address.street = NewUserStreet;\r\n                newUsers[i].address.city = NewUserCity;\r\n                newUsers[i].address.zipcode = NewUserZipcode;\r\n                break; //Stop this loop, we found it!\r\n            }\r\n        }\r\n\r\n        console.log('new users arr:' , newUsers);\r\n        this.setState({usersMap:newUsers});\r\n        console.log(\"state users:\", this.state.usersMap);\r\n    };\r\n\r\n    deleteUser=(userId)=>{\r\n\r\n        var userId = userId;\r\n        var usersArr= this.state.users;\r\n        var found = usersArr.find(function(x) {\r\n            return x.id === userId ;\r\n        });\r\n        var index2 = usersArr.indexOf(found);\r\n        usersArr.splice(index2, 1);\r\n        this.setState({users:usersArr});\r\n    };\r\n\r\n\r\n    render() {\r\n        console.log(this.state.users , \"rrrrrrrrrrr\");\r\n        var usersMap= this.state.users.map((item,index)=>{\r\n            return<div className='usrsMapping' key={index}>\r\n                <User userId={item.id} name={item.name} email={item.email} street={item.address.street} city={item.address.city} zipcode={item.address.zipcode} onUpdate={this.updateUser} onDelete={this.deleteUser}/>\r\n            </div>\r\n        });\r\n\r\n        return (\r\n            <div id=\"Users\">\r\n                {usersMap}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=> {\r\n    return {\r\n        data: state\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Users);"]},"metadata":{},"sourceType":"module"}