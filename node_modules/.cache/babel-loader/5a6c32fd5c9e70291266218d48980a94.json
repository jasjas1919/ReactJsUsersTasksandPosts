{"ast":null,"code":"import _toConsumableArray from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { connect } from \"react-redux\";\n\nvar mainReducer = function mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    users: [],\n    todos: [],\n    posts: [],\n    clickedUserId: \"\",\n    usersDone: false,\n    todosDone: false\n  };\n  var actionData = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actionData.type) {\n    /***TODOS***/\n    case 'GET-ALL-TODOS':\n      {\n        console.log(\"actionData todos-GET-ALL-TODOS\", actionData);\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.todos), [{\n          todos: actionData.todos,\n          todosDone: true\n        }]));\n      }\n\n    case 'GET-TODOS':\n      {\n        console.log(\"GET-TODOS state.todos\", state.todos);\n        console.log(\"GET-TODOS actionData.todoId\", actionData.todoId);\n        console.log(\"actionData.users;\", state.users);\n        /*    var todoId = actionData.todoId;\r\n            var thisIdArr=[];\r\n            var users = state.users;\r\n            var todos = state.todos;\r\n            if(todoId > 0 ){\r\n                thisIdArr= todos.filter(x=>x.userId === todoId).map((item,index)=>{\r\n                    if(item.completed === false){\r\n                        return false;\r\n                    }else{\r\n                        users.forEach(function (x) {\r\n                            if(x.id === todoId){\r\n                                var user = users[x.id];\r\n                                user[\"completed\"]=true;\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n                  console.log(\"thisIdArr\",thisIdArr);\r\n                console.log(\"users in GET-TODOS \",state.users);\r\n                console.log(\"todos in GET-TODOS\",state.todos);\r\n            }*/\n\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.todos), [{\n          todos: state.todos,\n          todosDone: true\n        }]));\n      }\n\n    /***USERS***/\n\n    case 'GET-ALL-USERS':\n      {\n        console.log('actionData-GET-ALL-USERS', actionData);\n        var users = actionData.users;\n        var todos = state.todos;\n        var newArr = todos.reduce(function (prev, t, arr) {\n          if (typeof prev[t.userId] === 'undefined') {\n            prev[t.userId] = [];\n          }\n\n          prev[t.userId].push(t);\n          return prev;\n        }, {});\n        console.log(\"newArr\", newArr);\n        Object.keys(newArr).forEach(function (i) {\n          var newArr_same_id = newArr[i];\n          newArr_same_id.forEach(function (element) {\n            if (element.completed === false) {\n              var notCompletedUserId = element.userId;\n              var newUsers = users.map(function (item, index) {\n                if (item.id === notCompletedUserId) {\n                  var user = users[index];\n                  user[\"completed\"] = false;\n                  /*   console.log(\"usersssssss\",users);*/\n                }\n              });\n            } else {\n              element[\"completed\"] = true;\n              /* console.log(\"else! element\",element);\r\n               console.log(\"else! usersssssss\",users);*/\n            }\n          });\n        });\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.users), [{\n          users: actionData.users,\n          usersDone: true,\n          todos: state.todos\n        }]));\n      }\n\n    case 'GET-USERS':\n      {\n        console.log(\"state.users state.users state.users\", state.users);\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.users), [{\n          users: state.users,\n          usersDone: true\n        }]));\n      }\n\n    case 'ADD-USER':\n      {\n        var arr = state.userArr;\n        arr.push(actionData.user);\n        return {\n          userArr: arr\n        };\n      }\n\n    case 'DELETE':\n      {\n        var arr = state.users;\n        arr.push(actionData.user);\n        return {\n          users: arr\n        };\n      }\n\n    /***POSTS***/\n\n    case 'GET-ALL-POSTS':\n      {\n        console.log(\"actionData posts-GET-ALL-POSTS\", actionData);\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.posts), [{\n          posts: actionData.posts\n        }]));\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;","map":{"version":3,"sources":["C:\\myapp\\src\\redux\\mainReducer.js"],"names":["connect","mainReducer","state","users","todos","posts","clickedUserId","usersDone","todosDone","actionData","type","console","log","Object","assign","todoId","newArr","reduce","prev","t","arr","userId","push","keys","forEach","i","newArr_same_id","element","completed","notCompletedUserId","newUsers","map","item","index","id","user","userArr"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\r\n\r\nconst mainReducer = (\r\n    state = {users:[], todos:[],posts:[],clickedUserId:\"\",usersDone:false,todosDone:false},  actionData) =>\r\n{\r\n    switch (actionData.type)\r\n    {\r\n        /***TODOS***/\r\n        case 'GET-ALL-TODOS':{\r\n            console.log(\"actionData todos-GET-ALL-TODOS\",actionData);\r\n            return Object.assign({},state,\r\n                ...state.todos,\r\n                {todos:actionData.todos,todosDone:true}\r\n            );\r\n        }\r\n\r\n        case 'GET-TODOS':{\r\n            console.log(\"GET-TODOS state.todos\",state.todos);\r\n            console.log(\"GET-TODOS actionData.todoId\",actionData.todoId);\r\n            console.log(\"actionData.users;\",state.users);\r\n\r\n        /*    var todoId = actionData.todoId;\r\n            var thisIdArr=[];\r\n            var users = state.users;\r\n            var todos = state.todos;\r\n            if(todoId > 0 ){\r\n                thisIdArr= todos.filter(x=>x.userId === todoId).map((item,index)=>{\r\n                    if(item.completed === false){\r\n                        return false;\r\n                    }else{\r\n                        users.forEach(function (x) {\r\n                            if(x.id === todoId){\r\n                                var user = users[x.id];\r\n                                user[\"completed\"]=true;\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n\r\n                console.log(\"thisIdArr\",thisIdArr);\r\n                console.log(\"users in GET-TODOS \",state.users);\r\n                console.log(\"todos in GET-TODOS\",state.todos);\r\n            }*/\r\n            return Object.assign({},state,\r\n                ...state.todos,\r\n                {todos:state.todos ,todosDone:true}\r\n            );\r\n        }\r\n\r\n        /***USERS***/\r\n        case 'GET-ALL-USERS':{\r\n            console.log('actionData-GET-ALL-USERS',actionData);\r\n            var users = actionData.users;\r\n            var todos = state.todos;\r\n            var newArr = todos.reduce((prev, t, arr) => {\r\n                if (typeof prev[t.userId] === 'undefined') {\r\n                    prev[t.userId] = [];\r\n                }\r\n                prev[t.userId].push(t);\r\n                return prev;\r\n            }, {});\r\n            console.log(\"newArr\",newArr);\r\n            Object.keys(newArr).forEach(i => {\r\n                var newArr_same_id = newArr[i];\r\n\r\n                newArr_same_id.forEach(function(element) {\r\n                    if(element.completed === false){\r\n                        var notCompletedUserId = element.userId;\r\n                        var newUsers = users.map((item,index)=>{\r\n                            if(item.id === notCompletedUserId){\r\n                                var user = users[index];\r\n                                user[\"completed\"]=false;\r\n                             /*   console.log(\"usersssssss\",users);*/\r\n                            }\r\n                        })\r\n                    }else{\r\n                        element[\"completed\"]=true;\r\n                       /* console.log(\"else! element\",element);\r\n                        console.log(\"else! usersssssss\",users);*/\r\n\r\n                    }\r\n                });\r\n\r\n            });\r\n\r\n            return Object.assign({},state,\r\n                ...state.users,\r\n                {users:actionData.users ,usersDone:true,todos:state.todos}\r\n            );\r\n        }\r\n\r\n        case 'GET-USERS':{\r\n            console.log(\"state.users state.users state.users\",state.users);\r\n            return Object.assign({},state,\r\n                ...state.users,\r\n                {users:state.users ,usersDone:true}\r\n            );\r\n        }\r\n\r\n        case 'ADD-USER':\r\n        {\r\n            var arr = state.userArr;\r\n            arr.push(actionData.user);\r\n            return{userArr:arr}\r\n        }\r\n        case 'DELETE':{\r\n            var arr = state.users;\r\n            arr.push(actionData.user);\r\n            return{users:arr}\r\n        }\r\n\r\n        /***POSTS***/\r\n        case 'GET-ALL-POSTS':{\r\n            console.log(\"actionData posts-GET-ALL-POSTS\",actionData);\r\n            return Object.assign({},state,\r\n                ...state.posts,\r\n                {posts:actionData.posts}\r\n            );\r\n\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default mainReducer;\r\n"]},"metadata":{},"sourceType":"module"}