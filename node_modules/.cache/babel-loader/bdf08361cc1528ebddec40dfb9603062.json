{"ast":null,"code":"import _classCallCheck from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\myapp\\\\src\\\\users\\\\Users.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport './users.css';\nimport User from \"./User\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n\n    _this.updateUser = function (thisUserId, NewUserName, NewUserEmail, NewUserStreet, NewUserCity, NewUserZipcode) {\n      var newUsers = _this.state.users;\n      var thisUserId = thisUserId;\n      var NewUserName = NewUserName;\n      var NewUserEmail = NewUserEmail;\n      var NewUserStreet = NewUserStreet;\n      var NewUserCity = NewUserCity;\n      var NewUserZipcode = NewUserZipcode;\n\n      for (var i in newUsers) {\n        if (newUsers[i].id == thisUserId) {\n          console.log('innnnn');\n          newUsers[i].name = NewUserName;\n          newUsers[i].email = NewUserEmail;\n          newUsers[i].address.street = NewUserStreet;\n          newUsers[i].address.city = NewUserCity;\n          newUsers[i].address.zipcode = NewUserZipcode;\n          break; //Stop this loop, we found it!\n        }\n      }\n\n      console.log('new users arr:', newUsers);\n\n      _this.setState({\n        usersMap: newUsers\n      });\n\n      console.log(\"state users:\", _this.state.usersMap);\n    };\n\n    _this.deleteUser = function (userId, x) {\n      var userId = userId;\n      var index = x;\n      var usersArr = _this.state.users;\n      usersArr.map(function (item, index) {\n        usersArr.splice(index, 1);\n\n        _this.setState({\n          users: usersArr\n        });\n\n        return _this.state.users;\n      });\n      /* console.log( usersArr.splice(index, 1), \"splice\")\r\n       usersArr.splice(index, 1);\r\n       console.log(userId,\"userId\");\r\n       console.log(x,\"x\");\r\n       this.setState({users: usersArr});\r\n       console.log(this.state.users)*/\n\n      /*for( var i = 0; i < usersArr.length; i++){\r\n          if ( usersArr[i].index === userId) {\r\n              usersArr.splice(i, 1);\r\n              console.log('array2' , usersArr);\r\n              this.setState({users: usersArr});\r\n              return this.state.users;\r\n          }\r\n        }*/\n    };\n\n    _this.state = {\n      users: [],\n      usersMap: []\n    };\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log(nextProps, \"nextProps\");\n      console.log(nextState, \"nextState\");\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://jsonplaceholder.typicode.com/users').then(function (res) {\n        return _this2.setState({\n          users: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.users, \"rrrrrrrrrrr\");\n      var usersMap = this.state.users.map(function (item, index) {\n        console.log(index, \"index\");\n        return React.createElement(\"div\", {\n          className: \"usrsMapping\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(User, {\n          index: index,\n          id: item.id,\n          name: item.name,\n          email: item.email,\n          street: item.address.street,\n          city: item.address.city,\n          zipcode: item.address.zipcode,\n          onUpdate: _this3.updateUser,\n          onDelete: _this3.deleteUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        id: \"Users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, usersMap);\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport default Users;","map":{"version":3,"sources":["C:\\myapp\\src\\users\\Users.js"],"names":["React","Component","axios","User","Users","props","updateUser","thisUserId","NewUserName","NewUserEmail","NewUserStreet","NewUserCity","NewUserZipcode","newUsers","state","users","i","id","console","log","name","email","address","street","city","zipcode","setState","usersMap","deleteUser","userId","x","index","usersArr","map","item","splice","nextProps","nextState","get","then","res","data","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './users.css';\r\nimport User from \"./User\";\r\n\r\n\r\nclass Users extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={users:[] , usersMap:[]};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps , nextState){\r\n        console.log(nextProps,\"nextProps\");\r\n        console.log(nextState ,\"nextState\");\r\n        return true;\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://jsonplaceholder.typicode.com/users').\r\n        then(res => this.setState({users : res.data})).\r\n        catch(err => console.log(err));\r\n\r\n\r\n\r\n    }\r\n\r\n    updateUser =(thisUserId,NewUserName,NewUserEmail,NewUserStreet,NewUserCity,NewUserZipcode)=>{\r\n        var newUsers = this.state.users;\r\n\r\n        var thisUserId = thisUserId;\r\n        var NewUserName = NewUserName;\r\n        var NewUserEmail = NewUserEmail;\r\n        var NewUserStreet = NewUserStreet;\r\n        var NewUserCity = NewUserCity;\r\n        var NewUserZipcode = NewUserZipcode;\r\n\r\n        for (var i in newUsers) {\r\n            if (newUsers[i].id == thisUserId) {\r\n                console.log('innnnn');\r\n                newUsers[i].name = NewUserName;\r\n                newUsers[i].email = NewUserEmail;\r\n                newUsers[i].address.street = NewUserStreet;\r\n                newUsers[i].address.city = NewUserCity;\r\n                newUsers[i].address.zipcode = NewUserZipcode;\r\n                break; //Stop this loop, we found it!\r\n            }\r\n        }\r\n\r\n        console.log('new users arr:' , newUsers);\r\n        this.setState({usersMap:newUsers});\r\n        console.log(\"state users:\", this.state.usersMap);\r\n    };\r\n\r\n    deleteUser=(userId,x)=>{\r\n\r\n        var userId = userId;\r\n        var index = x;\r\n        var usersArr= this.state.users;\r\n\r\n        usersArr.map((item,index)=>{\r\n            usersArr.splice(index, 1);\r\n            this.setState({users:usersArr});\r\n        return this.state.users\r\n        });\r\n\r\n\r\n       /* console.log( usersArr.splice(index, 1), \"splice\")\r\n        usersArr.splice(index, 1);\r\n        console.log(userId,\"userId\");\r\n        console.log(x,\"x\");\r\n        this.setState({users: usersArr});\r\n        console.log(this.state.users)*/\r\n\r\n\r\n        /*for( var i = 0; i < usersArr.length; i++){\r\n            if ( usersArr[i].index === userId) {\r\n                usersArr.splice(i, 1);\r\n                console.log('array2' , usersArr);\r\n                this.setState({users: usersArr});\r\n                return this.state.users;\r\n            }\r\n\r\n        }*/\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        console.log(this.state.users , \"rrrrrrrrrrr\");\r\n        var usersMap= this.state.users.map((item,index)=>{\r\n            console.log(index ,\"index\");\r\n            return<div className='usrsMapping' key={index}>\r\n                <User index={index} id={item.id} name={item.name} email={item.email} street={item.address.street} city={item.address.city} zipcode={item.address.zipcode} onUpdate={this.updateUser} onDelete={this.deleteUser}/>\r\n            </div>\r\n        });\r\n\r\n        return (\r\n            <div id=\"Users\">\r\n                {usersMap}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}