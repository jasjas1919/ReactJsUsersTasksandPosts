{"ast":null,"code":"import _toConsumableArray from \"C:\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { connect } from \"react-redux\";\n\nvar mainReducer = function mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    users: [],\n    todos: [],\n    posts: [],\n    clickedUserId: \"\",\n    usersDone: false,\n    todosDone: false\n  };\n  var actionData = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actionData.type) {\n    /***TODOS***/\n    case 'GET-ALL-TODOS':\n      {\n        console.log(\"actionData todos-GET-ALL-TODOS\", actionData);\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.todos), [{\n          todos: actionData.todos,\n          todosDone: true\n        }]));\n      }\n\n    case 'GET-TODOS':\n      {\n        console.log(\"GET-TODOS state.todos\", state.todos);\n        console.log(\"GET-TODOS state.todos\", actionData.todoId);\n        var todoId = actionData.todoId;\n\n        if (todoId > 0) {\n          var todos = state.todos;\n          var thisIdArr = todos.filter(function (x) {\n            return x.userId === todoId;\n          }).map(function (item, index) {\n            if (item.completed === false) {\n              return false;\n            }\n          });\n          console.log(\"thisIdArr\", thisIdArr);\n        }\n\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.users), [{\n          todos: state.todos,\n          todosDone: true\n        }]));\n      }\n\n    /***USERS***/\n\n    case 'GET-ALL-USERS':\n      {\n        console.log('actionData-GET-ALL-USERS', actionData);\n        var users = actionData.users;\n        var todos = state.todos;\n        var newArr = todos.reduce(function (prev, t, index, arr) {\n          console.log(\"prev\", prev);\n          console.log(\"t\", t);\n          console.log(\"index\", index);\n          console.log(\"arr\", arr);\n\n          if (typeof prev[t.userId] === 'undefined') {\n            prev[t.userId] = [];\n          }\n\n          prev[t.userId].push(t);\n          return prev;\n        }, {});\n        var completedArr = todos.map(function (item, index) {\n          console.log(\"item\", item);\n\n          if (item.completed === false) {\n            console.log(\"in if\");\n            console.log(\"itemf\", item);\n            var todoUserId = item.userId;\n            console.log(\"todoUserId\", todoUserId);\n            var found = users.find(function (x) {\n              console.log(\"x\", x);\n              return x.id === todoUserId;\n            });\n            console.log(\"found\", found);\n          }\n\n          console.log(\"founddddd\", found);\n        });\n        console.log(\"completedArr\", completedArr);\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.users), [{\n          users: actionData.users,\n          usersDone: true\n        }]));\n      }\n\n    case 'GET-USERS':\n      {\n        console.log(\"state.users state.users state.users\", state.users);\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.users), [{\n          users: state.users,\n          usersDone: true\n        }]));\n      }\n\n    case 'ADD-USER':\n      {\n        var arr = state.userArr;\n        arr.push(actionData.user);\n        return {\n          userArr: arr\n        };\n      }\n\n    case 'DELETE':\n      {\n        var arr = state.users;\n        arr.push(actionData.user);\n        return {\n          users: arr\n        };\n      }\n\n    /***POSTS***/\n\n    case 'GET-ALL-POSTS':\n      {\n        console.log(\"actionData posts-GET-ALL-POSTS\", actionData);\n        return Object.assign.apply(Object, [{}, state].concat(_toConsumableArray(state.posts), [{\n          posts: actionData.posts\n        }]));\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;","map":{"version":3,"sources":["C:\\myapp\\src\\redux\\mainReducer.js"],"names":["connect","mainReducer","state","users","todos","posts","clickedUserId","usersDone","todosDone","actionData","type","console","log","Object","assign","todoId","thisIdArr","filter","x","userId","map","item","index","completed","newArr","reduce","prev","t","arr","push","completedArr","todoUserId","found","find","id","userArr","user"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\r\n\r\nconst mainReducer = (\r\n    state = {users:[], todos:[],posts:[],clickedUserId:\"\",usersDone:false,todosDone:false},  actionData) =>\r\n{\r\n    switch (actionData.type)\r\n    {\r\n\r\n        /***TODOS***/\r\n        case 'GET-ALL-TODOS':{\r\n            console.log(\"actionData todos-GET-ALL-TODOS\",actionData);\r\n            return Object.assign({},state,\r\n                ...state.todos,\r\n                {todos:actionData.todos,todosDone:true}\r\n            );\r\n        }\r\n\r\n        case 'GET-TODOS':{\r\n            console.log(\"GET-TODOS state.todos\",state.todos);\r\n            console.log(\"GET-TODOS state.todos\",actionData.todoId);\r\n            var todoId = actionData.todoId;\r\n\r\n            if(todoId > 0 ){\r\n                var todos = state.todos;\r\n\r\n                var thisIdArr= todos.filter(x=>x.userId === todoId).map((item,index)=>{\r\n                    if(item.completed === false){\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                console.log(\"thisIdArr\",thisIdArr)\r\n            }\r\n\r\n            return Object.assign({},state,\r\n                ...state.users,\r\n                {todos:state.todos ,todosDone:true}\r\n            );\r\n        }\r\n\r\n        /***USERS***/\r\n        case 'GET-ALL-USERS':{\r\n            console.log('actionData-GET-ALL-USERS',actionData);\r\n            var users = actionData.users;\r\n            var todos = state.todos;\r\n            var newArr = todos.reduce((prev, t, index, arr) => {\r\n               console.log(\"prev\",prev);\r\n               console.log(\"t\",t);\r\n               console.log(\"index\",index);\r\n               console.log(\"arr\",arr);\r\n\r\n                if (typeof prev[t.userId] === 'undefined') {\r\n                    prev[t.userId] = [];\r\n                }\r\n                prev[t.userId].push(t);\r\n                return prev;\r\n            }, {});\r\n\r\n            var completedArr= todos.map((item,index)=>{\r\n                console.log(\"item\",item);\r\n                if(item.completed === false) {\r\n                    console.log(\"in if\");\r\n                    console.log(\"itemf\",item);\r\n\r\n                    var todoUserId = item.userId;\r\n                    console.log(\"todoUserId\",todoUserId);\r\n                    var found = users.find(function(x) {\r\n                        console.log(\"x\",x);\r\n                        return x.id === todoUserId;\r\n                    });\r\n                    console.log(\"found\",found);\r\n\r\n                }\r\n                console.log(\"founddddd\",found);\r\n            });\r\n            console.log(\"completedArr\",completedArr);\r\n\r\n            return Object.assign({},state,\r\n                ...state.users,\r\n                {users:actionData.users ,usersDone:true}\r\n            );\r\n        }\r\n\r\n        case 'GET-USERS':{\r\n            console.log(\"state.users state.users state.users\",state.users);\r\n            return Object.assign({},state,\r\n                ...state.users,\r\n                {users:state.users ,usersDone:true}\r\n            );\r\n        }\r\n\r\n        case 'ADD-USER':\r\n        {\r\n            var arr = state.userArr;\r\n            arr.push(actionData.user);\r\n            return{userArr:arr}\r\n        }\r\n        case 'DELETE':{\r\n            var arr = state.users;\r\n            arr.push(actionData.user);\r\n            return{users:arr}\r\n        }\r\n\r\n        /***POSTS***/\r\n        case 'GET-ALL-POSTS':{\r\n            console.log(\"actionData posts-GET-ALL-POSTS\",actionData);\r\n            return Object.assign({},state,\r\n                ...state.posts,\r\n                {posts:actionData.posts}\r\n            );\r\n\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default mainReducer;\r\n"]},"metadata":{},"sourceType":"module"}